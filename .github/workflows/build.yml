name: Build Electron App

on:
  push:
    branches:
      - main # 或者是您的默认分支名称
    tags:
      - 'v*' # 当推送一个带有 "v" 前缀的标签时触发（例如：v1.0.0）

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16 # 根据您的项目需求更改 Node.js 版本

    - name: Install dependencies
      run: npm ci

    - name: Install Wine
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y wine64

    - name: Install Electron Packager
      run: npm install electron-packager -g

    - name: Build Electron app for Linux
      run: electron-packager . --platform=linux --arch=x64 --out=dist-linux

    - name: Build Electron app for Windows
      run: electron-packager . --platform=win32 --arch=x64 --out=dist-windows

    - name: Build Electron app for macOS
      if: startsWith(github.ref, 'refs/tags/') # 可选：仅在创建新标签时构建 macOS 应用程序
      run: electron-packager . --platform=darwin --arch=x64 --out=dist-macos

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 使用 GitHub 提供的默认 token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist-linux/nftqianggou-linux-x64.tar.gz
        asset_name: nftqianggou-linux-x64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist-windows/nftqianggou-win32-x64.zip
        asset_name: nftqianggou-win32-x64.zip
        asset_content_type: application/zip

    - name: Upload macOS Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist-macos/nftqianggou-darwin-x64.zip
        asset_name: nftqianggou-darwin-x64.zip